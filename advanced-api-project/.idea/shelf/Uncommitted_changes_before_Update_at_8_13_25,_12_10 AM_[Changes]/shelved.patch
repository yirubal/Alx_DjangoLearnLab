Index: advanced_api_project/api/models.py
===================================================================
diff --git a/advanced_api_project/api/models.py b/advanced_api_project/api/models.py
deleted file mode 100644
--- a/advanced_api_project/api/models.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,34 +0,0 @@
-from django.db import models
-
-# Create your models here.
-from django.db import models
-
-class Author(models.Model):
-    """
-    Author represents a single writer.
-    - name: human-readable name of the author.
-    One Author -> Many Books (reverse relation: author.books)
-    """
-    name = models.CharField(max_length=255)
-
-    def __str__(self) -> str:
-        return self.name
-
-
-class Book(models.Model):
-    """
-    Book is written by exactly one Author.
-    - title: book title
-    - publication_year: integer year the book was published
-    - author: FK to Author (one-to-many). related_name='books' gives Author.books
-    """
-    title = models.CharField(max_length=255)
-    publication_year = models.IntegerField()
-    author = models.ForeignKey(
-        Author,
-        on_delete=models.CASCADE,
-        related_name="books",  # enables author.books
-    )
-
-    def __str__(self) -> str:
-        return f"{self.title} ({self.publication_year})"
Index: advanced_api_project/api/admin.py
===================================================================
diff --git a/advanced_api_project/api/admin.py b/advanced_api_project/api/admin.py
deleted file mode 100644
--- a/advanced_api_project/api/admin.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,16 +0,0 @@
-from django.contrib import admin
-
-# Register your models here.
-from django.contrib import admin
-from .models import Author, Book
-
-@admin.register(Author)
-class AuthorAdmin(admin.ModelAdmin):
-    list_display = ("id", "name")
-    search_fields = ("name",)
-
-@admin.register(Book)
-class BookAdmin(admin.ModelAdmin):
-    list_display = ("id", "title", "publication_year", "author")
-    list_filter = ("publication_year", "author")
-    search_fields = ("title",)
Index: advanced_api_project/api/views.py
===================================================================
diff --git a/advanced_api_project/api/views.py b/advanced_api_project/api/views.py
deleted file mode 100644
--- a/advanced_api_project/api/views.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,3 +0,0 @@
-from django.shortcuts import render
-
-# Create your views here.
Index: advanced_api_project/advanced_api_project/settings.py
===================================================================
diff --git a/advanced_api_project/advanced_api_project/settings.py b/advanced_api_project/advanced_api_project/settings.py
deleted file mode 100644
--- a/advanced_api_project/advanced_api_project/settings.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,125 +0,0 @@
-"""
-Django settings for advanced_api_project project.
-
-Generated by 'django-admin startproject' using Django 5.2.4.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/5.2/topics/settings/
-
-For the full list of settings and their values, see
-https://docs.djangoproject.com/en/5.2/ref/settings/
-"""
-
-from pathlib import Path
-
-# Build paths inside the project like this: BASE_DIR / 'subdir'.
-BASE_DIR = Path(__file__).resolve().parent.parent
-
-
-# Quick-start development settings - unsuitable for production
-# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/
-
-# SECURITY WARNING: keep the secret key used in production secret!
-SECRET_KEY = 'django-insecure-gjxj*w^22t%d9rbc@b2aenh$94u-1g2d)n=p5=*c6raxh&+u*5'
-
-# SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = True
-
-ALLOWED_HOSTS = []
-
-
-# Application definition
-
-INSTALLED_APPS = [
-    'django.contrib.admin',
-    'django.contrib.auth',
-    'django.contrib.contenttypes',
-    'django.contrib.sessions',
-    'django.contrib.messages',
-    'django.contrib.staticfiles',
-     "rest_framework",   # third-party
-      "api",
-
-]
-
-MIDDLEWARE = [
-    'django.middleware.security.SecurityMiddleware',
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-    'django.middleware.clickjacking.XFrameOptionsMiddleware',
-]
-
-ROOT_URLCONF = 'advanced_api_project.urls'
-
-TEMPLATES = [
-    {
-        'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [],
-        'APP_DIRS': True,
-        'OPTIONS': {
-            'context_processors': [
-                'django.template.context_processors.request',
-                'django.contrib.auth.context_processors.auth',
-                'django.contrib.messages.context_processors.messages',
-            ],
-        },
-    },
-]
-
-WSGI_APPLICATION = 'advanced_api_project.wsgi.application'
-
-
-# Database
-# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
-
-DATABASES = {
-    'default': {
-        'ENGINE': 'django.db.backends.sqlite3',
-        'NAME': BASE_DIR / 'db.sqlite3',
-    }
-}
-
-
-# Password validation
-# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
-
-AUTH_PASSWORD_VALIDATORS = [
-    {
-        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
-    },
-]
-
-
-# Internationalization
-# https://docs.djangoproject.com/en/5.2/topics/i18n/
-
-LANGUAGE_CODE = 'en-us'
-
-TIME_ZONE = 'UTC'
-
-USE_I18N = True
-
-USE_TZ = True
-
-
-# Static files (CSS, JavaScript, Images)
-# https://docs.djangoproject.com/en/5.2/howto/static-files/
-
-STATIC_URL = 'static/'
-
-# Default primary key field type
-# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
-
-DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
Index: advanced_api_project/api/apps.py
===================================================================
diff --git a/advanced_api_project/api/apps.py b/advanced_api_project/api/apps.py
deleted file mode 100644
--- a/advanced_api_project/api/apps.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,6 +0,0 @@
-from django.apps import AppConfig
-
-
-class ApiConfig(AppConfig):
-    default_auto_field = 'django.db.models.BigAutoField'
-    name = 'api'
Index: advanced_api_project/api/serializers.py
===================================================================
diff --git a/advanced_api_project/api/serializers.py b/advanced_api_project/api/serializers.py
deleted file mode 100644
--- a/advanced_api_project/api/serializers.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,33 +0,0 @@
-from datetime import date
-from rest_framework import serializers
-from .models import Author, Book
-
-class BookSerializer(serializers.ModelSerializer):
-    """
-    Serializes Book. Adds validation to ensure publication_year is not in the future.
-    """
-    class Meta:
-        model = Book
-        fields = ["id", "title", "publication_year", "author"]
-
-    def validate_publication_year(self, value: int) -> int:
-        current_year = date.today().year
-        if value > current_year:
-            raise serializers.ValidationError("publication_year cannot be in the future.")
-        # You can also guard against unrealistic years if desired (e.g., < 1400)
-        return value
-
-
-class AuthorSerializer(serializers.ModelSerializer):
-    """
-    Serializes Author with nested list of their books.
-    - Uses the BookSerializer for the nested representation.
-    - books is read-only here; you create books separately or implement a custom create().
-    Relationship:
-      Author (1) ---- (Many) Book via Book.author (related_name='books')
-    """
-    books = BookSerializer(many=True, read_only=True)
-
-    class Meta:
-        model = Author
-        fields = ["id", "name", "books"]
Index: advanced_api_project/advanced_api_project/wsgi.py
===================================================================
diff --git a/advanced_api_project/advanced_api_project/wsgi.py b/advanced_api_project/advanced_api_project/wsgi.py
deleted file mode 100644
--- a/advanced_api_project/advanced_api_project/wsgi.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,16 +0,0 @@
-"""
-WSGI config for advanced_api_project project.
-
-It exposes the WSGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/5.2/howto/deployment/wsgi/
-"""
-
-import os
-
-from django.core.wsgi import get_wsgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'advanced_api_project.settings')
-
-application = get_wsgi_application()
Index: advanced_api_project/advanced_api_project/urls.py
===================================================================
diff --git a/advanced_api_project/advanced_api_project/urls.py b/advanced_api_project/advanced_api_project/urls.py
deleted file mode 100644
--- a/advanced_api_project/advanced_api_project/urls.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,22 +0,0 @@
-"""
-URL configuration for advanced_api_project project.
-
-The `urlpatterns` list routes URLs to views. For more information please see:
-    https://docs.djangoproject.com/en/5.2/topics/http/urls/
-Examples:
-Function views
-    1. Add an import:  from my_app import views
-    2. Add a URL to urlpatterns:  path('', views.home, name='home')
-Class-based views
-    1. Add an import:  from other_app.views import Home
-    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
-Including another URLconf
-    1. Import the include() function: from django.urls import include, path
-    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
-"""
-from django.contrib import admin
-from django.urls import path
-
-urlpatterns = [
-    path('admin/', admin.site.urls),
-]
Index: advanced_api_project/manage.py
===================================================================
diff --git a/advanced_api_project/manage.py b/advanced_api_project/manage.py
deleted file mode 100644
--- a/advanced_api_project/manage.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,22 +0,0 @@
-#!/usr/bin/env python
-"""Django's command-line utility for administrative tasks."""
-import os
-import sys
-
-
-def main():
-    """Run administrative tasks."""
-    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'advanced_api_project.settings')
-    try:
-        from django.core.management import execute_from_command_line
-    except ImportError as exc:
-        raise ImportError(
-            "Couldn't import Django. Are you sure it's installed and "
-            "available on your PYTHONPATH environment variable? Did you "
-            "forget to activate a virtual environment?"
-        ) from exc
-    execute_from_command_line(sys.argv)
-
-
-if __name__ == '__main__':
-    main()
Index: advanced_api_project/api/tests.py
===================================================================
diff --git a/advanced_api_project/api/tests.py b/advanced_api_project/api/tests.py
deleted file mode 100644
--- a/advanced_api_project/api/tests.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/advanced-api-project.iml" filepath="$PROJECT_DIR$/.idea/advanced-api-project.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: advanced_api_project/advanced_api_project/asgi.py
===================================================================
diff --git a/advanced_api_project/advanced_api_project/asgi.py b/advanced_api_project/advanced_api_project/asgi.py
deleted file mode 100644
--- a/advanced_api_project/advanced_api_project/asgi.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,16 +0,0 @@
-"""
-ASGI config for advanced_api_project project.
-
-It exposes the ASGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/5.2/howto/deployment/asgi/
-"""
-
-import os
-
-from django.core.asgi import get_asgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'advanced_api_project.settings')
-
-application = get_asgi_application()
Index: .idea/advanced-api-project.iml
===================================================================
diff --git a/.idea/advanced-api-project.iml b/.idea/advanced-api-project.iml
deleted file mode 100644
--- a/.idea/advanced-api-project.iml	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="PYTHON_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.13" jdkType="Python SDK" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-  <component name="PyDocumentationSettings">
-    <option name="format" value="PLAIN" />
-    <option name="myDocStringFormat" value="Plain" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/profiles_settings.xml	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,6 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <settings>
-    <option name="USE_PROJECT_PROFILE" value="false" />
-    <version value="1.0" />
-  </settings>
-</component>
\ No newline at end of file
Index: advanced_api_project/api/migrations/0001_initial.py
===================================================================
diff --git a/advanced_api_project/api/migrations/0001_initial.py b/advanced_api_project/api/migrations/0001_initial.py
deleted file mode 100644
--- a/advanced_api_project/api/migrations/0001_initial.py	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
+++ /dev/null	(revision 2931c21a179b220fc01b06173e7ea36bcfcbde44)
@@ -1,31 +0,0 @@
-# Generated by Django 5.2.4 on 2025-08-12 21:04
-
-import django.db.models.deletion
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    initial = True
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Author',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('name', models.CharField(max_length=255)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Book',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('title', models.CharField(max_length=255)),
-                ('publication_year', models.IntegerField()),
-                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='api.author')),
-            ],
-        ),
-    ]
diff --git a/advanced_api_project/advanced_api_project/__init__.py b/advanced_api_project/advanced_api_project/__init__.py
deleted file mode 100644
diff --git a/advanced_api_project/api/__init__.py b/advanced_api_project/api/__init__.py
deleted file mode 100644
diff --git a/advanced_api_project/api/migrations/__init__.py b/advanced_api_project/api/migrations/__init__.py
deleted file mode 100644
